<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

   <parent>
        <groupId>org.jboss.weld.examples</groupId>
        <artifactId>weld-examples-parent</artifactId>
        <version>1.1.11.Final-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    
    <groupId>org.jboss.weld.examples.jsf</groupId>
    <artifactId>WELD-1262-ex</artifactId>
    <packaging>war</packaging>
    <name>test app</name>
  
    <dependencies>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>jsf-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>graphene-webdriver</artifactId>
            <type>pom</type>
        </dependency>
        </dependencies>
    <build>
        <finalName>WELD-1262-ex</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warSourceExcludes>WEB-INF/classes/**,WEB-INF/lib/**</warSourceExcludes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <failOnError>false</failOnError>
                    <filesets>
                        <fileset>
                            <!-- clean up files from war:inplace -->
                            <directory>src/main/webapp</directory>
                            <includes>
                                <include>WEB-INF/classes/**</include>
                                <include>WEB-INF/lib/**</include>
                                <include>META-INF/context.xml</include>
                                <include>WEB-INF/web.xml</include>
                                <include>WEB-INF/jetty-env.xml</include>
                                <include>WEB-INF/appengine-web.xml</include>
                                <include>WEB-INF/logging.properties</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <configuration>
                    <path>/${project.build.finalName}</path>
                    <!--
                       uncomment to use server configuration override; see
                       readme.txt for details
                    -->
                    <!--<server>tomcat</server>-->
                    <url>http://localhost:${tomcat.http.port}/manager</url>
                    <port>${embedded-tomcat.http.port}</port>
                    <!--
                       port for embedded Tomcat only (putting this
                       configuration in the execution for the run goal
                       doesn't work)
                    -->
                    <!-- if you don't want to use war:inplace, use this path instead -->
                    <!--
                       <warSourceDirectory>${project.build.directory}/${project.build.finalName}</warSourceDirectory>
                    -->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <configuration>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>${jetty.http.port}</port>
                            <maxIdleTime>3600000</maxIdleTime>
                        </connector>
                    </connectors>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <webAppConfig>
                        <contextPath>/${project.build.finalName}</contextPath>
                    </webAppConfig>
                    <jettyEnvXml>${basedir}/src/main/webapp-jetty/WEB-INF/jetty-env.xml</jettyEnvXml>
                    <!-- if you don't want to use war:inplace, use this path instead -->
                    <!--
                       <webAppSourceDirectory>${project.build.directory}/${project.build.finalName}</webAppSourceDirectory>
                    -->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

        </plugins>
    </build>
     <profiles>
     <profile>
            <id>arquillian-jbossas-managed-7</id>
        </profile>

        <profile>
            <id>arquillian-jbossas-remote-7</id>
        </profile>
         <profile>
            <id>ftest</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
   
</project>
